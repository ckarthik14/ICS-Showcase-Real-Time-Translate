import base64

def write_mp3_from_base64(base64_string, output_filename):
    # Decode the base64 string
    mp3_data = base64.b64decode(base64_string)
    
    # Write the binary data to an MP3 file
    with open(output_filename, 'wb') as mp3_file:
        mp3_file.write(mp3_data)

# Example base64 string (This should be replaced with your actual base64 data)
base64_string = ""

# Specify the output filename
output_filename = "output.mp3"

# Call the function to write the MP3 file
write_mp3_from_base64(base64_string, output_filename)
